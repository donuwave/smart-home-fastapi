"""new field in session

Revision ID: 3e19c8f004ec
Revises: a6ef9e3c5d2e
Create Date: 2025-05-14 22:40:43.394162

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3e19c8f004ec"
down_revision: Union[str, None] = "a6ef9e3c5d2e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("session")
    op.drop_table("user")
    op.drop_table("profile")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profile",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "first_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("gender", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('profile_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="profile_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "user",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "password", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "profile_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('user_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"], ["profile.id"], name="user_profile_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        sa.UniqueConstraint("email", name="user_email_key"),
        sa.UniqueConstraint("profile_id", name="user_profile_id_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "session",
        sa.Column(
            "access_token", sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "refresh_token", sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "device_id", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="session_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="session_pkey"),
    )
    # ### end Alembic commands ###
